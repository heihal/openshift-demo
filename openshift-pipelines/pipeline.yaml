apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  annotations:
    tekton.dev/git-0: 'https://github.com=github-auth'
  creationTimestamp: '2025-06-09T06:35:23Z'
  generation: 5
  managedFields:
    - apiVersion: tekton.dev/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:tekton.dev/git-0': {}
        'f:spec':
          'f:params': {}
          'f:tasks': {}
      manager: Mozilla
      operation: Update
      time: '2025-06-09T07:35:02Z'
  name: build-and-deploy-microservices
  namespace: hemhal-dev
  resourceVersion: '2421726640'
  uid: f3c574c7-0b2a-4181-b4b6-70ade6ff1191
spec:
  params:
    - default: 'https://github.com/heihal/openshift-demo.git'
      description: The URL of the git repository
      name: git-url
      type: string
    - default: main
      description: 'The git revision (branch, tag, or commit)'
      name: git-revision
      type: string
    - default: 'image-registry.openshift-image-registry.svc:5000/hemhal-dev'
      description: 'The image registry to push images to (e.g., image-registry.openshift-image-registry.svc:5000/your-project)'
      name: image-registry
      type: string
    - default: openshift-demo
      description: The name of the directory created by git-clone (usually repo name)
      name: repo-dir-name
      type: string
  tasks:
    - name: fetch-sources
      params:
        - name: url
          value: $(params.git-url)
        - name: revision
          value: $(params.git-revision)
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: Task
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: trigger-build-service1
      params:
        - name: SCRIPT
          value: |
            set -e 
            echo "Changing directory to /workspace/manifest-dir/"
            cd /workspace/manifest-dir/

            echo "Current directory: $(pwd)"
            echo "Listing files in current directory:"
            ls -la

            echo "Starting OpenShift Build for service1-main-app..."
            oc start-build service1-main-app-bc \
              --from-dir=./service1-main-app \
              --wait \
              -n hemhal-dev
            echo "OpenShift Build for service1-main-app completed."
      runAfter:
        - fetch-sources
      taskRef:
        kind: Task
        name: openshift-client
      workspaces:
        - name: manifest-dir
          workspace: shared-workspace
    - name: deploy-service1
      params:
        - name: SCRIPT
          value: |
            set -e
            echo "Changing directory to /workspace/manifest-dir/"
            cd /workspace/manifest-dir/

            echo "Current directory: $(pwd)"
            echo "Listing files in service1-main-app/openshift:"
            ls -la service1-main-app/openshift

            oc apply -f service1-main-app/openshift/deployment.yaml -n hemhal-dev
            oc apply -f service1-main-app/openshift/service.yaml -n hemhal-dev
            oc apply -f service1-main-app/openshift/route.yaml -n hemhal-dev
            oc apply -f service1-main-app/openshift/hpa.yaml -n hemhal-dev
            oc patch deployment service1-main-app -n hemhal-dev -p '{"spec":{"template":{"spec":{"containers":[{"name":"service1-main-app","image":"$(params.image-registry)/service1-main-app:latest"}]}}}}'
      runAfter:
        - trigger-build-service1
      taskRef:
        kind: Task
        name: openshift-client
      workspaces:
        - name: manifest-dir
          workspace: shared-workspace
    - name: trigger-build-service2
      params:
        - name: SCRIPT
          value: |
            set -e
            echo "Changing directory to /workspace/manifest-dir/"
            cd /workspace/manifest-dir/

            echo "Starting OpenShift Build for service2-message-app..."
            oc start-build service2-message-app-bc \
              --from-dir=./service2-message-app \
              --wait \
              -n hemhal-dev
            echo "OpenShift Build for service2-message-app completed."
      runAfter:
        - fetch-sources
      taskRef:
        kind: Task
        name: openshift-client
      workspaces:
        - name: manifest-dir
          workspace: shared-workspace
    - name: deploy-service2
      params:
        - name: SCRIPT
          value: |
            set -e
            echo "Changing directory to /workspace/manifest-dir/"
            cd /workspace/manifest-dir/

            oc apply -f service2-message-app/openshift/deployment.yaml -n hemhal-dev
            oc apply -f service2-message-app/openshift/service.yaml -n hemhal-dev
            oc apply -f service2-message-app/openshift/hpa.yaml -n hemhal-dev
            oc patch deployment service2-message-app -n hemhal-dev -p '{"spec":{"template":{"spec":{"containers":[{"name":"service2-message-app","image":"$(params.image-registry)/service2-message-app:latest"}]}}}}'
      runAfter:
        - trigger-build-service2
      taskRef:
        kind: Task
        name: openshift-client
      workspaces:
        - name: manifest-dir
          workspace: shared-workspace
    - name: trigger-build-traffic-generator
      params:
        - name: SCRIPT
          value: |
            set -e
            echo "Changing directory to /workspace/manifest-dir/"
            cd /workspace/manifest-dir/

            echo "Starting OpenShift Build for traffic-generator-func..."
            oc start-build traffic-generator-func-bc \
              --from-dir=./traffic-generator-func \
              --wait \
              -n hemhal-dev
            echo "OpenShift Build for traffic-generator-func completed."
      runAfter:
        - fetch-sources
      taskRef:
        kind: Task
        name: openshift-client
      workspaces:
        - name: manifest-dir
          workspace: shared-workspace
    - name: deploy-traffic-generator
      params:
        - name: SCRIPT
          value: |
            set -e
            echo "Changing directory to /workspace/manifest-dir/"
            cd /workspace/manifest-dir/

            echo "Updating Knative service traffic-generator..."
            sed -i "s|<IMAGE_NAME_HERE>|$(params.image-registry)/traffic-generator-func:latest|g" traffic-generator-func/openshift/knative-service.yaml

            oc apply -f traffic-generator-func/openshift/knative-service.yaml -n hemhal-dev
            echo "Knative service traffic-generator applied/updated."
            echo "Image used: $(params.image-registry)/traffic-generator-func:latest"
      runAfter:
        - trigger-build-traffic-generator
      taskRef:
        kind: Task
        name: openshift-client
      workspaces:
        - name: manifest-dir
          workspace: shared-workspace
  workspaces:
    - description: Workspace for sharing files between tasks
      name: shared-workspace
